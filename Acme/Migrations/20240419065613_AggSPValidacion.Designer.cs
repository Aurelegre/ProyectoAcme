// <auto-generated />
using System;
using Acme.Tablas;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Acme.Migrations
{
    [DbContext(typeof(BdAcmeContext))]
    [Migration("20240419065613_AggSPValidacion")]
    partial class AggSPValidacion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Acme.Tablas.Campo", b =>
                {
                    b.Property<int>("Idcampo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idcampo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcampo"));

                    b.Property<int?>("IdEncuesta")
                        .HasColumnType("int")
                        .HasColumnName("idEncuesta");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Requerido")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("requerido");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Titulo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Idcampo")
                        .HasName("PK__campo__02D54CF5E41CCB59");

                    b.HasIndex("IdEncuesta");

                    b.ToTable("campo", (string)null);
                });

            modelBuilder.Entity("Acme.Tablas.Encuestum", b =>
                {
                    b.Property<int>("IdEncuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEncuesta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEncuesta"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.HasKey("IdEncuesta")
                        .HasName("PK__Encuesta__C03F98577E5253C0");

                    b.ToTable("Encuesta");
                });

            modelBuilder.Entity("Acme.Tablas.Link", b =>
                {
                    b.Property<int>("Idlink")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idlink");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idlink"));

                    b.Property<int>("Idencuesta")
                        .HasColumnType("int")
                        .HasColumnName("idencuesta");

                    b.Property<string>("Link1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("link");

                    b.HasKey("Idlink")
                        .HasName("PK__link__EAF1A68570C0D3EC");

                    b.HasIndex("Idencuesta");

                    b.ToTable("link", (string)null);
                });

            modelBuilder.Entity("Acme.Tablas.Respuestum", b =>
                {
                    b.Property<int>("IdRespuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRespuesta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRespuesta"));

                    b.Property<string>("Contenido")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("contenido");

                    b.Property<int?>("Idcampo")
                        .HasColumnType("int")
                        .HasColumnName("idcampo");

                    b.HasKey("IdRespuesta")
                        .HasName("PK__respuest__8AB5BFC8910A85B6");

                    b.HasIndex("Idcampo");

                    b.ToTable("respuesta", (string)null);
                });

            modelBuilder.Entity("Acme.Tablas.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Acme.Tablas.Campo", b =>
                {
                    b.HasOne("Acme.Tablas.Encuestum", "IdEncuestaNavigation")
                        .WithMany("Campos")
                        .HasForeignKey("IdEncuesta")
                        .HasConstraintName("fk_encuesta");

                    b.Navigation("IdEncuestaNavigation");
                });

            modelBuilder.Entity("Acme.Tablas.Link", b =>
                {
                    b.HasOne("Acme.Tablas.Encuestum", "IdencuestaNavigation")
                        .WithMany("Links")
                        .HasForeignKey("Idencuesta")
                        .IsRequired()
                        .HasConstraintName("fk_encuestaLink");

                    b.Navigation("IdencuestaNavigation");
                });

            modelBuilder.Entity("Acme.Tablas.Respuestum", b =>
                {
                    b.HasOne("Acme.Tablas.Campo", "IdcampoNavigation")
                        .WithMany("Respuesta")
                        .HasForeignKey("Idcampo")
                        .HasConstraintName("fk_campo");

                    b.Navigation("IdcampoNavigation");
                });

            modelBuilder.Entity("Acme.Tablas.Campo", b =>
                {
                    b.Navigation("Respuesta");
                });

            modelBuilder.Entity("Acme.Tablas.Encuestum", b =>
                {
                    b.Navigation("Campos");

                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
